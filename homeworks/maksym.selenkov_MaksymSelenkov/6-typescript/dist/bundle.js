(()=>{var t=document.querySelector("[data-key]"),e=document.querySelector("[data-points]"),n=document.querySelector("[data-bubble]"),o=100,a=setInterval((function(){var e;e="ABCDEFGHIJKLMNOPQRSTUVWXYZ",t.textContent=e[Math.floor(Math.random()*e.length)],t.classList.add("key__symbol"),function(){var t=0;if(0==t){t=1;var e=document.querySelector("[data-bar]"),n=1,o=setInterval((function(){n>=100?(clearInterval(o),t=0):(n++,e.style.width=n+"%")}),10)}}()}),2e3);function r(n){var a=n.key.toUpperCase()===t.textContent;return a?(d(o+=Math.floor(6*Math.random())+5),o>=200&&c("You win !!!"),e.textContent=o.toString()):a?void 0:(d(o-=Math.floor(6*Math.random())+20),o<=0&&c("You loose :("),e.textContent=o.toString())}function d(t){n.style.width=t+100+"px",n.style.height=t+100+"px"}function c(t){var e=document.createTextNode(t);document.body.append(e),document.removeEventListener("keydown",r),clearInterval(a)}document.addEventListener("keydown",r)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJNQUFBLElBQU1BLEVBQXdCQyxTQUFTQyxjQUFjLGNBQy9DQyxFQUErQkYsU0FBU0MsY0FBYyxpQkFDdERFLEVBQTJCSCxTQUFTQyxjQUFjLGlCQUNwREcsRUFBaUIsSUFFZkMsRUFBa0JDLGFBQVksV0F1QnBDLElBQ1VDLEVBQUFBLEVBQW1CLDZCQUN6QlIsRUFBTVMsWUFBY0QsRUFBU0UsS0FBS0MsTUFBTUQsS0FBS0UsU0FBV0osRUFBU0ssU0FDakViLEVBQU1jLFVBQVVDLElBQUksZUFleEIsV0FDSSxJQUFJQyxFQUFZLEVBQ2hCLEdBQVMsR0FBTEEsRUFBUSxDQUNSQSxFQUFJLEVBQ0osSUFBTSxFQUF3QmYsU0FBU0MsY0FBYyxjQUNqRCxFQUFnQixFQUNoQixFQUFLSyxhQUNULFdBQ1EsR0FBUyxLQUNUVSxjQUFjLEdBQ2RELEVBQUksSUFFSixJQUNBLEVBQU1FLE1BQU1DLE1BQVEsRUFBUSxPQVBSLEtBN0NoQ0MsS0FDRCxLQUlILFNBQVNDLEVBQVNDLEdBQ2QsSUFBTUMsRUFBc0JELEVBQUVFLElBQUlDLGdCQUFrQnpCLEVBQU1TLFlBQzFELE9BQUdjLEdBRUNHLEVBREFyQixHQUFVSyxLQUFLQyxNQUFzQixFQUFoQkQsS0FBS0UsVUFBMkIsR0FFbERQLEdBQVUsS0FBS3NCLEVBQVcsZUFDdEJ4QixFQUFTTSxZQUFjSixFQUFPdUIsWUFFckNMLE9BQUosR0FFSUcsRUFEQXJCLEdBQVVLLEtBQUtDLE1BQXNCLEVBQWhCRCxLQUFLRSxVQUE0QixJQUVuRFAsR0FBVSxHQUFHc0IsRUFBVyxnQkFDcEJ4QixFQUFTTSxZQUFjSixFQUFPdUIsWUFVN0MsU0FBU0YsRUFBYXJCLEdBQ2xCRCxFQUFTYyxNQUFNQyxNQUFRZCxFQUFTLElBQU0sS0FDdENELEVBQVNjLE1BQU1XLE9BQVN4QixFQUFTLElBQU0sS0FHM0MsU0FBU3NCLEVBQVlHLEdBQ2pCLElBQU1DLEVBQWlCOUIsU0FBUytCLGVBQWVGLEdBQy9DN0IsU0FBU2dDLEtBQUtDLE9BQU9ILEdBQ3JCOUIsU0FBU2tDLG9CQUFvQixVQUFXZCxHQUN4Q0osY0FBY1gsR0FqQ2xCTCxTQUFTbUMsaUJBQWlCLFVBQVdmLEkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly82LXR5cGVzY3JpcHQvLi9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qga2V5RWw6IEhUTUxEaXZFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEta2V5XScpO1xuY29uc3QgcG9pbnRzRWw6IEhUTUxIZWFkaW5nRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXBvaW50c10nKTtcbmNvbnN0IGJ1YmJsZUVsOiBIVE1MRGl2RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWJ1YmJsZV0nKTtcbmxldCBwb2ludHM6IG51bWJlciA9IDEwMDtcblxuY29uc3QgcmVmcmVzaEludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgIGdlbmVyYXRlS2V5KCk7XG4gICAgbW92ZUJhcigpO1xufSwgMjAwMCk7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBwbGF5R2FtZSk7XG5cbmZ1bmN0aW9uIHBsYXlHYW1lKGU6IEtleWJvYXJkRXZlbnQpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNvcnJlY3RLZXk6IGJvb2xlYW4gPSBlLmtleS50b1VwcGVyQ2FzZSgpID09PSBrZXlFbC50ZXh0Q29udGVudDtcbiAgICBpZihjb3JyZWN0S2V5KSB7XG4gICAgICAgIHBvaW50cyArPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoMTAgLSA1ICsgMSkpICsgNTtcbiAgICAgICAgY2hhbmdlQnViYmxlKHBvaW50cyk7XG4gICAgICAgIGlmKHBvaW50cyA+PSAyMDApIGZpbmlzaEdhbWUoJ1lvdSB3aW4gISEhJyk7XG4gICAgICAgIHJldHVybiBwb2ludHNFbC50ZXh0Q29udGVudCA9IHBvaW50cy50b1N0cmluZygpO1xuICAgIH1cbiAgICBpZighY29ycmVjdEtleSkge1xuICAgICAgICBwb2ludHMgLT0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKDI1IC0gMjAgKyAxKSkgKyAyMDtcbiAgICAgICAgY2hhbmdlQnViYmxlKHBvaW50cylcbiAgICAgICAgaWYocG9pbnRzIDw9IDApIGZpbmlzaEdhbWUoJ1lvdSBsb29zZSA6KCcpO1xuICAgICAgICByZXR1cm4gcG9pbnRzRWwudGV4dENvbnRlbnQgPSBwb2ludHMudG9TdHJpbmcoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlS2V5KCk6IHZvaWQge1xuICAgIGNvbnN0IGFscGhhYmV0OiBzdHJpbmcgPSBcIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaXCI7XG4gICAga2V5RWwudGV4dENvbnRlbnQgPSBhbHBoYWJldFtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBhbHBoYWJldC5sZW5ndGgpXTtcbiAgICBrZXlFbC5jbGFzc0xpc3QuYWRkKCdrZXlfX3N5bWJvbCcpO1xufVxuXG5mdW5jdGlvbiBjaGFuZ2VCdWJibGUocG9pbnRzOiBudW1iZXIpOiB2b2lkIHtcbiAgICBidWJibGVFbC5zdHlsZS53aWR0aCA9IHBvaW50cyArIDEwMCArICdweCc7XG4gICAgYnViYmxlRWwuc3R5bGUuaGVpZ2h0ID0gcG9pbnRzICsgMTAwICsgJ3B4Jztcbn1cblxuZnVuY3Rpb24gZmluaXNoR2FtZSAodGV4dDogc3RyaW5nKTogdm9pZCB7XG4gICAgY29uc3QgZmluaXNoRWw6IFRleHQgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0ZXh0KTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZChmaW5pc2hFbCk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHBsYXlHYW1lKTtcbiAgICBjbGVhckludGVydmFsKHJlZnJlc2hJbnRlcnZhbCk7XG59XG5cbmZ1bmN0aW9uIG1vdmVCYXIoKTogdm9pZCB7XG4gICAgbGV0IGk6IG51bWJlciA9IDA7XG4gICAgaWYgKGkgPT0gMCkge1xuICAgICAgICBpID0gMTtcbiAgICAgICAgY29uc3QgYmFyRWw6IEhUTUxEaXZFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtYmFyXScpO1xuICAgICAgICBsZXQgd2lkdGg6IG51bWJlciA9IDE7XG4gICAgICAgIGxldCBpZCA9IHNldEludGVydmFsKGZyYW1lLCAxMCk7XG4gICAgICAgIGZ1bmN0aW9uIGZyYW1lKCk6IHZvaWQge1xuICAgICAgICAgICAgaWYgKHdpZHRoID49IDEwMCkge1xuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaWQpO1xuICAgICAgICAgICAgICAgIGkgPSAwO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB3aWR0aCsrO1xuICAgICAgICAgICAgICAgIGJhckVsLnN0eWxlLndpZHRoID0gd2lkdGggKyBcIiVcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJrZXlFbCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInBvaW50c0VsIiwiYnViYmxlRWwiLCJwb2ludHMiLCJyZWZyZXNoSW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImFscGhhYmV0IiwidGV4dENvbnRlbnQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJsZW5ndGgiLCJjbGFzc0xpc3QiLCJhZGQiLCJpIiwiY2xlYXJJbnRlcnZhbCIsInN0eWxlIiwid2lkdGgiLCJtb3ZlQmFyIiwicGxheUdhbWUiLCJlIiwiY29ycmVjdEtleSIsImtleSIsInRvVXBwZXJDYXNlIiwiY2hhbmdlQnViYmxlIiwiZmluaXNoR2FtZSIsInRvU3RyaW5nIiwiaGVpZ2h0IiwidGV4dCIsImZpbmlzaEVsIiwiY3JlYXRlVGV4dE5vZGUiLCJib2R5IiwiYXBwZW5kIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiXSwic291cmNlUm9vdCI6IiJ9